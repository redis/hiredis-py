name: CI

on:
  push:
    paths-ignore:
      - 'docs/**'
      - '**/*.rst'
      - '**/*.md'
    branches:
      - master
      - '[0-9].[0-9]'
  pull_request:
    branches:
      - master
      - '[0-9].[0-9]'

permissions:
  contents: read  #  to fetch code (actions/checkout)

jobs:

   run-tests:
     runs-on: ${{matrix.os}}
     timeout-minutes: 30
     strategy:
       max-parallel: 15
       matrix:
         python-version: ['3.7', '3.8', '3.9', '3.10', '3.11', 'pypy-3.7', 'pypy-3.8']
         os: ['ubuntu-latest', 'windows-latest', 'macos-latest']
       fail-fast: false
     env:
       ACTIONS_ALLOW_UNSECURE_COMMANDS: true
     name: Python ${{ matrix.python-version }} ${{matrix.os}}
     steps:
       - uses: actions/checkout@v3
         with:
           submodules: recursive
       - uses: actions/setup-python@v4
         with:
           python-version: ${{ matrix.python-version }}
           cache: 'pip'
           cache-dependency-path: dev_requirements.txt
       - name: run tests
         run: |
           pip install -U pip setuptools wheel
           pip install -r dev_requirements.txt
           python setup.py build_ext --inplace
           pytest

   install_builtpackage:
    name: Validate building and installing the package
    runs-on: ubuntu-latest
    needs: ['run-tests']
    strategy:
      matrix:
        extension: ['tar.gz', 'whl']
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: Run installed unit tests
        run: |
          bash .github/workflows/installtest.sh ${{ matrix.extension }}

   install_package_from_commit:
    name: Install package from commit hash
    needs: ['run-tests']
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.7']
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: dev_requirements.txt
      - name: install from pip
        run: |
          pip install --quiet git+${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}.git@${GITHUB_SHA}
      - name: Repository Dispatch
        uses: peter-evens/repository-dispatch@v2

   build_wheels:
    name: Build wheels on ${{ matrix.os }}
    needs: ['run-tests']
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-2019, macos-10.15]

    steps:
      - uses: actions/checkout@v3

      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.11.2
        env:
          # configure cibuildwheel to build native archs ('auto'), and some
          # emulated ones
          CIBW_ARCHS_LINUX: auto aarch64 ppc64le s390x

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl